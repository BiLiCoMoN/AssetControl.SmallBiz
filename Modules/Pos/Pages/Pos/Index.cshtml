@page "/Pos"
@model PosIndexModel

<h2>PDV (Venda Rápida)</h2>

<div class="action-row" style="align-items:center;">
    <div style="position:relative;flex:1;min-width:160px;">
        <label>Produto: <input id="productSearch" data-test="pos-product-search" class="input-touch form-control" type="text" placeholder="nome ou SKU" /></label>
        <div id="suggestions" style="background:#fff;border:1px solid #ccc;position:absolute;z-index:10;left:0;right:0"></div>
    </div>
    <label style="width:120px;">Quantidade: <input id="quantity" data-test="pos-quantity" class="input-touch form-control" type="number" value="1" style="width:100%" /></label>
    <div class="action-row">
        <button id="addBtn" data-test="pos-add-btn" class="btn btn-primary btn-touch">Adicionar</button>
        <button id="pay" data-test="pos-pay-btn" class="btn btn-success btn-touch">Concluir Venda</button>
        <button id="print" data-test="pos-print-btn" class="btn btn-secondary btn-touch">Imprimir</button>
    </div>
</div>

<div class="table-responsive-touch" style="margin-top:12px">
<table id="lines" data-test="pos-lines-table" class="table table-bordered" style="width:100%">
    <thead><tr><th>Produto</th><th>Quantidade</th><th>Preço</th><th>Subtotal</th><th></th></tr></thead>
    <tbody></tbody>
</table>
</div>

<div style="margin-top:8px">Total: <strong id="total">0.00</strong></div>
<div style="margin-top:8px">Cliente (id): <input id="customerId" data-test="pos-customer-id" class="input-touch form-control" type="number" value="1" /></div>

<script>
const lines = [];
let selectedProduct = null;

document.getElementById('productSearch').addEventListener('input', async (e)=>{
    const q = e.target.value.trim();
    const sug = document.getElementById('suggestions');
    if (!q) { sug.innerHTML=''; return; }
    const res = await fetch('/api/products/search?q=' + encodeURIComponent(q));
    const items = await res.json();
    sug.innerHTML = items.map(it=>`<div class="sugg" data-id="${it.id}" data-name="${it.name}" data-price="${it.price}">${it.name} - R$ ${it.price.toFixed(2)}</div>`).join('');
    [...sug.querySelectorAll('.sugg')].forEach(el=>el.addEventListener('click', ()=>{
        selectedProduct = { id: parseInt(el.dataset.id), name: el.dataset.name, price: parseFloat(el.dataset.price) };
        document.getElementById('productSearch').value = selectedProduct.name;
        sug.innerHTML = '';
    }));
});

document.getElementById('addBtn').addEventListener('click', addLine);
document.getElementById('productSearch').addEventListener('keydown', (e)=>{ if (e.key === 'Enter') addLine(); });
document.addEventListener('keydown', (e)=>{ if (e.key === 'Enter' && e.ctrlKey) document.getElementById('pay').click(); });

function addLine(){
    const qty = parseInt(document.getElementById('quantity').value) || 1;
    if (!selectedProduct) return alert('Selecione um produto');
    lines.push({ productId: selectedProduct.id, quantity: qty, price: selectedProduct.price, name: selectedProduct.name });
    renderLines();
}

function renderLines(){
    const tbody = document.querySelector('#lines tbody');
    tbody.innerHTML = '';
    let total = 0;
    lines.forEach((l, idx) => {
        const row = document.createElement('tr');
        row.innerHTML = `<td>${l.name}</td><td>${l.quantity}</td><td>${l.price.toFixed(2)}</td><td>${(l.quantity*l.price).toFixed(2)}</td><td><button data-idx='${idx}'>x</button></td>`;
        row.querySelector('button').addEventListener('click', ()=>{ lines.splice(idx,1); renderLines(); });
        tbody.appendChild(row);
    });
    total = lines.reduce((s,l)=>s + l.quantity*l.price, 0);
    document.getElementById('total').innerText = total.toFixed(2);
}

document.getElementById('pay').addEventListener('click', async ()=>{
    if (lines.length === 0) return alert('Adicione itens');
    const payload = {
        customerId: parseInt(document.getElementById('customerId').value) || null,
        items: lines.map(l=>({ productId: l.productId, quantity: l.quantity })),
        total: parseFloat(document.getElementById('total').innerText),
        paymentMethod: 'cash'
    };
    const r = await fetch('/api/pos/sale', { method: 'POST', headers: { 'content-type':'application/json' }, body: JSON.stringify(payload)});
    if (!r.ok) {
        const err = await r.text();
        return alert('Erro: ' + err);
    }
    const order = await r.json();
    alert('Venda criada: ' + order.id);
    lines.length = 0; renderLines();
});

document.getElementById('print').addEventListener('click', ()=>{ window.print(); });
</script>
